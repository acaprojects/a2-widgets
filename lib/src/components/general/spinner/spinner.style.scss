// @Author: Alex Sorafumo <Yuion>
// @Date:   13/09/2016 2:55 PM
// @Email:  alex@yuion.net
// @Filename: spinner.style.scss
// @Last modified by:   Yuion
// @Last modified time: 15/12/2016 11:32 AM

@import '../../../shared/ui-vars';

$angle: 30deg;
$space: .5em;

.spinner {
    margin: auto;
    position: relative;
    user-select: none;
}

.plane {
    height: 4em;
    width: 4em;

    .plane {
        animation: sk-rotateplane 1.2s infinite ease-in-out;
        background-color: $black-o50;
        height: 4em;
        width: 4em;

        .box {
            height: 4em;
            width: 4em;
        }
    }
}

.double-bounce {
    height: 4em;
    width: 4em;

    .circle {
        background-color: $black-o50;

        &.one,
        &.two {
            animation: sk-bounce 2s infinite ease-in-out;
            background-color: $black-o50;
            border-radius: 50%;
            height: 4em;
            left: 0;
            opacity: .6;
            position: absolute;
            width: 4em;
            top: 0;

        }

        &.two {
            animation-delay: -1s;
        }
    }
}

.bars {
    display: flex;

    .rect {
        animation: sk-stretchdelay 1.3s infinite ease-in-out;
        background-color: $black-o50;
        display: inline-block;
        height: 3em;
        margin-right: .2em;
        width: .5em;
        @for $i from 1 to 6 {
            &.state-#{$i + 1} {
                animation-delay: -1.2s + $i / 10;
            }
        }
    }
}

.cubemove {
    height: 4em;
    width: 4em;

    .cube {
        animation: sk-cubemove 1.8s infinite ease-in-out;
        background-color: $black-o50;
        height: 1em;
        left: 0;
        position: absolute;
        top: 0;
        width: 1em;

        &.two {
            animation-delay: -.9s;
        }
    }
}

.bounce {
    height: 4em;
    width: 4em;

    .circle {
        animation: sk-scaleout 1s infinite ease-in-out;
        background-color: $black-o50;
        border-radius: 100%;
        height: 4em;
        width: 4em;
    }
}

.ring-bounce {
    height: 4em;
    width: 4em;

    .circle {
        animation: sk-scaleout 1s infinite ease-in-out;
        border: .5em solid $black-o50;
        border-color: $black-o50;
        border-radius: 100%;
        height: 4em;
        width: 4em;
    }
}

.ring-rotate {
    height: 4em;
    position: relative;
    width: 4em;

    .circle {
        border-bottom: .2em solid $black-o50;
        border-color: $black-o50;
        border-left: .2em solid $black-o50;
        border-radius: 100%;
        height: 4em;
        left: 50%;
        position: absolute;
        top: 50%;
        width: 4em;
        @for $i from 1 to 4 {
            &.state-#{$i} {
                animation: sk-rotate 1s infinite ease-in-out;
                animation-delay: -1s * $i / 4;
                height: 5em - $i;
                width: 5em - $i;
            }
        }
    }
}

.ring-bounce-in {
    height: 4em;
    width: 4em;

    .circle {
        animation: sk-scaleout-in 2s infinite ease-in-out;
        border: .5em solid $black-o50;
        border-color: $black-o50;
        border-radius: 100%;
        height: 4em;
        left: 0;
        opacity: .5;
        position: absolute;
        top: 0;
        width: 4em;

        &.two {
            animation-delay: -1s;
        }
    }
}

.dot-bounce {
    height: 1.8em;
    text-align: center;
    width: 7em;

    .circle {
        animation: sk-bouncedelay 1.4s infinite ease-in-out both;
        background-color: $black-o50;
        border-radius: 100%;
        display: inline-block;
        height: 1.8em;
        margin-right: .25em;
        width: 1.8em;

        &.state-1 {
            animation-delay: -320ms;
        }

        &.state-2 {
            animation-delay: -160ms;
        }
    }
}

.dot-circle {
    height: 4em;
    position: relative;
    width: 4em;

    .dot {
        height: 4em;
        left: 0;
        position: absolute;
        top: 0;
        width: 4em;

        .inner {
            animation: sk-circleFadeDelay 1.2s infinite ease-in-out both;
            background-color: $black-o50;
            border-radius: 100%;
            content: '';
            display: block;
            height: .6em;
            margin: 0 auto;
            width: .6em;
        }
    }

    @for $i from 1 to 12 {
        .dot.state-#{$i} {
            transform: rotate(30deg * $i);

            .inner {
                animation-delay: -$i * 100ms;
            }
        }
    }
}

.dot-circle-scale {
    height: 4em;
    position: relative;
    width: 4em;

    .dot {
        height: 4em;
        left: 0;
        position: absolute;
        top: 0;
        width: 4em;

        .inner {
            animation: sk-circleBounceDelay 1.2s infinite ease-in-out both;
            background-color: $black-o50;
            border-radius: 100%;
            content: '';
            display: block;
            height: .6em;
            margin: 0 auto;
            width: .6em;
        }
    }

    @for $i from 1 to 12 {
        .dot.state-#{$i} {
            transform: rotate(30deg * $i);

            .inner {
                animation-delay: -$i * 100ms;
            }
        }
    }
}

.circle-ring,
.double-circle-ring {
    height: 4em;
    width: 4em;

    svg circle {
        transform-origin: center;
        animation: sk-rotate-simple .8s infinite linear;
        &.offset {
            animation: sk-rotate-simple-180 .8s infinite linear;
        }
        &.reverse {
            animation: sk-rotate-simple-r .6s infinite linear;
        }
        &.fast {
            animation: sk-rotate-simple .4s infinite linear;
        }
    }
}

.cube-grid {
    height: 4em;
    width: 4em;

    .cube {
        animation: sk-cubeGridScaleDelay 1.3s infinite ease-in-out;
        background-color: $black-o50;
        float: left;
        height: 33%;
        width: 33%;

        &.one,
        &.five,
        &.nine {
            animation-delay: -.2s;
        }

        &.two,
        &.six {
            animation-delay: -.3s;
        }

        &.three {
            animation-delay: -.4s;
        }

        &.four,
        &.eight {
            animation-delay: -.1s;
        }
    }
}

.dot-wave {
    width: 4em;
    height: 1em;
    margin: 1.5em 0;
    .dot {
        animation: sk-dot-wave 1.6s infinite ease-in-out;
    }

    .one { animation-delay: 0s; }
    .two { animation-delay: .4s; }
    .three { animation-delay: .8s; }
    .four { animation-delay: 1.2s; }
}

@keyframes sk-scaleout {
    0% { transform: scale(0); }
    100% { opacity: 0; transform: scale(1); }
}

@keyframes sk-rotateplane {
    0% { transform: perspective(12em) rotateX(0deg) rotateY(0deg); }
    50% { transform: perspective(12em) rotateX(-18.1deg) rotateY(0deg); }
    100% { transform: perspective(12em) rotateX(-180deg) rotateY(-179.9deg); }
}

@keyframes sk-stretchdelay {
    0%, 40%, 100% { transform: scaleY(.4); }
    20% { transform: scaleY(1); }
}

@keyframes sk-cubemove {
    25% { transform: translateX(4.2em) rotate(-90deg) scale(.5); }
    50% { transform: translateX(4.2em) translateY(4.2em) rotate(-179deg); }
    50.1% { transform: translateX(4.2em) translateY(4.2em) rotate(-180deg); }
    75% { transform: translateX(0) translateY(4.2em) rotate(-270deg) scale(.5); }
    100% { transform: rotate(-360deg); }
}

@keyframes sk-scaleout {
    0% { transform: scale(0); }
    100% { opacity: 0; transform: scale(1); }
}

@keyframes sk-rotate {
    0% { transform: translate(-50%, -50%) rotate(0deg); }
    50% { transform: translate(-50%, -50%) rotate(180deg); }
    100% { transform: translate(-50%, -50%) rotate(360deg); }
}

@keyframes sk-rotate-simple {
    0% { transform: rotate(0deg); }
    50% { transform: rotate(180deg); }
    100% { transform: rotate(360deg); }
}

@keyframes sk-rotate-simple-r {
    0% { transform: rotate(360deg); }
    50% { transform: rotate(180deg); }
    100% { transform: rotate(0deg); }
}

@keyframes sk-rotate-simple-180 {
    0% { transform: rotate(180deg); }
    50% { transform: rotate(360deg); }
    100% { transform: rotate(540deg); }
}

@keyframes sk-rotate-i {
    0% { transform: translate(-50%, -50%) rotate(-0deg); }
    50% { transform: translate(-50%, -50%) rotate(-179deg); }
    100% { transform: translate(-50%, -50%) rotate(-357deg); }
}

@keyframes sk-bounce {
    0%, 100% { transform: scale(0); }
    50% { transform: scale(1); }
}

@keyframes sk-scaleout-in {
    0% { transform: scale(0); }
    50% { transform: scale(1); }
    100% { transform: scale(0); }
}

@keyframes sk-bouncedelay {
    0%, 80%, 100% { transform: scale(0); }
    40% { transform: scale(1); }
}

@keyframes sk-circleBounceDelay {
    0%, 80%, 100% { transform: scale(0); }
    40% { transform: scale(1); }
}

@keyframes sk-circleFadeDelay {
    0%, 39%, 100% { opacity: 0; }
    40% { opacity: 1; }
}

@keyframes sk-cubeGridScaleDelay {
    0%, 70%, 100% { transform: scale3d(1, 1, 1); }
    35% { transform: scale3d(0, 0, 1); }
}


@keyframes sk-dot-wave {
    0% { transform: translateY(0%); }
    25% { transform: translateY(-10%); }
    75% { transform: translateY(10%); }
    100% { transform: translateY(0%); }
}
